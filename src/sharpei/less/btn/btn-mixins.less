@import (reference) 'btn-variables';
@import (reference) '../common/mixins';
@import (reference) '../common/utils';

.btn-size-mixin(@size) {
  @height: ~"@{btn-@{size}-height}";
  @font-size: ~"@{btn-@{size}-font-size}";
  @icon-font-size: ~"@{btn-@{size}-icon-font-size}";
  @padding: ~"@{btn-@{size}-padding}";

  font-size: @font-size;
  line-height: @height;
  height: @height;
  min-width: @height;

  &:not(.btn-icon) {
    padding: 0 @padding;
  }

  [class*=icon] {
    font-size: @icon-font-size;
  }
}

.btn-list-size-mixin(@size) {
  @spacing: ~"@{btn-list-@{size}-spacing}";

  & > .btn:not(:last-child),
  .btn-state-label:not(:last-child) .btn {
    margin-right: @spacing;
  }
}

.btn-v-list-size-mixin(@size) {
  @spacing: ~"@{btn-v-list-@{size}-spacing}";

  & > .btn:not(:last-child),
  .btn-state-label:not(:last-child) .btn {
    margin-bottom: @spacing;
  }
}

.btn-focus-border(@color) {
  .inner-border(@btn-highlight-width; @color);
}

.btn-theme-mixin(@theme) {
  @normal-background-color: ~"@{btn-@{theme}-normal-background-color}";
  @hover-background-color: ~"@{btn-@{theme}-hover-background-color}";
  @active-background-color: ~"@{btn-@{theme}-active-background-color}";
  @normal-text-color: ~"@{btn-@{theme}-normal-text-color}";
  @hover-text-color: ~"@{btn-@{theme}-hover-text-color}";
  @active-text-color: ~"@{btn-@{theme}-active-text-color}";
  @normal-highlight-color: ~"@{btn-@{theme}-normal-highlight-color}";
  @active-highlight-color: ~"@{btn-@{theme}-active-highlight-color}";

  // normal state
  background-color: @normal-background-color;
  color: @normal-text-color;
  .btn-focus-border(transparent);

  // focus state
  &:focus,
  .btn-state:focus + & {
    &:not(:hover):not(:active) {
      .btn-focus-border(@normal-highlight-color);
    }
  }

  // hover state
  &:hover {
    background-color: @hover-background-color;
    color: @hover-text-color;
    .btn-focus-border(transparent);
  }

  // active state
  &:active,
  &.active,
  .btn-state:checked + & {
    background-color: @active-background-color;
    color: @active-text-color;
    .btn-focus-border(transparent);
  }

  // active focus state
  &.active:focus,
  .btn-state:checked:focus + & {
    &:not(:hover):not(:active) {
      .btn-focus-border(@active-highlight-color);
    }
  }

  // disabled state
  &.disabled.disabled,
  &:disabled:disabled,
  .btn-state:disabled:disabled + & {
    background-color: @normal-background-color;
    color: @normal-text-color;
    .btn-focus-border(transparent);
  }

  // active disabled state
  &.active.disabled.disabled,
  &.active:disabled:disabled,
  .btn-state:checked:disabled:disabled + & {
    background-color: @active-background-color;
    color: @active-text-color;
    .btn-focus-border(transparent);
  }
}
