@import (reference) '../common/mixins';
@import (reference) '../common/utils';

.btn-focus-border(@color) {
  .inner-border(2px; @color);
}

.btn-theme-mixin(
  @bg-color;
  @color;
  @hover-bg-color;
  @hover-color;
  @active-bg-color;
  @active-color;
  @focus-color;
  @active-focus-color;
) {
  // define states
  @normal-state: {
    background-color: @bg-color;
    color: @color;
  };

  @hover-state: {
    background-color: @hover-bg-color;
    color: @hover-color;
  };

  @active-state: {
    background-color: @active-bg-color;
    color: @active-color;
  };

  @focus-state: {
    .btn-focus-border(@focus-color);
  };

  @active-focus-state: {
    .btn-focus-border(@active-focus-color);
  };

  @no-focus-state: {
    .btn-focus-border(fade(@focus-color, 0%));
  };

  @no-active-focus-state: {
    .btn-focus-border(fade(@active-focus-color, 0%));
  };

  // normal state
  & {
    @normal-state();
    @no-focus-state();
  }

  // focus state
  &:focus,
  input[type=checkbox]:focus + label[for]&,
  input[type=radio]:focus + label[for]& {
    &:not(:hover):not(:active) {
      @focus-state();
    }
  }

  // hover state
  &:hover {
    @hover-state();
    @no-focus-state();
  }

  // active state
  &:active,
  &.active,
  input[type=checkbox]:checked + label[for]&,
  input[type=radio]:checked + label[for]& {
    @active-state();
    @no-active-focus-state();
  }

  // active focus state
  &.active:focus,
  input[type=checkbox]:checked:focus + label[for]&,
  input[type=radio]:checked:focus + label[for]& {
    &:not(:hover):not(:active) {
      @active-focus-state();
    }
  }

  // disabled state
  &.disabled.disabled,
  &:disabled:disabled,
  &[disabled][disabled],
  input[type=checkbox]:disabled:disabled + label[for]&,
  input[type=radio]:disabled:disabled + label[for]&,
  input[type=checkbox][disabled][disabled] + label[for]&,
  input[type=radio][disabled][disabled] + label[for]& {
    @normal-state();
    @no-focus-state();
  }

  // active disabled state
  &.active.disabled.disabled,
  &.active:disabled:disabled,
  &.active[disabled][disabled],
  input[type=checkbox]:checked:disabled:disabled + label[for]&,
  input[type=radio]:checked:disabled:disabled + label[for]&,
  input[type=checkbox]:checked[disabled][disabled] + label[for]&,
  input[type=radio]:checked[disabled][disabled] + label[for]& {
    @active-state();
    @no-active-focus-state();
  }
}
